- name: "### --- Playbook to create a rootCA with openssl --- ###"
  hosts: pi
  gather_facts: false
  tasks:
    - name: "Create a SSL-Server-Certificate"
      ansible.builtin.include_role:
        name: rootca-with-openssl
        tasks_from: create-server-certificate.yaml
      vars:
        # This is the name and ip-adress of the system to which the ssl-certificate will be applied
        dnsname: "test-server"
        serverip: "192.168.0.1"

        # Here you can define the length of your rootCA-certificate and server-cert angeben
        server_crt_days: "365" # 1 year for the server-certificate

        # Here you can define, if an existing ssl-certificate, ssl-key or ss-request can be overriden. Default=false. 'True' overrides existing files
        overwrite_existing: false
        # Name of the Server Cert, Key und CSR
        ssl_server_key_name: "{{ dnsname }}.{{ root_domain }}.key"
        ssl_server_csr_name: "{{ dnsname }}.{{ root_domain }}.csr"
        ssl_server_crt_name: "{{ dnsname }}.{{ root_domain }}.crt"
        ssl_server_passphrase_for_private_key: "Test1234"

        # Alternative DNS-Names
        ## for the Server
        alt1: "{{ dnsname }}"
        alt2: "{{ serverip }}"
        alt3: "{{ dnsname }}.{{ root_domain }}"
